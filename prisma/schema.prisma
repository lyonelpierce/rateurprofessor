generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(cuid())
  userId String @unique
  professorReviews   ProfessorReview[]
  universityReviews  UniversityReview[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model University {
  id          String     @id @default(cuid())
  name        String
  category    String
  location    String
  regimen     String
  tipo        String
  professors  Professor[]
  reviews     UniversityReview[]
  createdAt   DateTime   @default(now())
}

model Professor {
  id            String       @id @default(cuid())
  name          String       @unique
  userId        String       
  university    University   @relation(fields: [universityId], references: [id])
  universityId  String
  reviews       ProfessorReview[]
  createdAt     DateTime     @default(now())

  @@index([universityId])
}

model Course {
  id            String       @id @default(cuid())
  name          String       @unique
  professorReviews ProfessorReview[]
  createdAt     DateTime     @default(now())

  @@index([id])
}

model ProfessorReview {
  id            String       @id @default(cuid())
  rate          Int          
  again         Int
  difficulty    Int
  content       String       @db.VarChar(500)
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  professor     Professor    @relation(fields: [professorId], references: [id])
  professorId   String
  course        Course       @relation(fields: [courseId], references: [id])
  courseId      String
  createdAt     DateTime     @default(now())

  @@index([userId])
  @@index([professorId])
  @@index([courseId])

}

model UniversityReview {
  id            String       @id @default(cuid())
  safetyRating       Int
  locationRating     Int
  happinessRating    Int
  opportunitiesRating Int
  reputationRating   Int
  clubsRating        Int
  facilitiesRating   Int
  internetRating     Int
  foodRating         Int
  socialRating       Int
  overallRating      String
  content       String       @db.VarChar(500)
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  university    University   @relation(fields: [universityId], references: [id])
  universityId  String
  createdAt     DateTime     @default(now())

  @@index([userId])
  @@index([universityId])
}

